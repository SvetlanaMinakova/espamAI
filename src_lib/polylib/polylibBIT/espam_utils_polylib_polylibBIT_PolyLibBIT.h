/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class espam_utils_polylib_polylibBIT_PolyLibBIT */

#ifndef _Included_espam_utils_polylib_polylibBIT_PolyLibBIT
#define _Included_espam_utils_polylib_polylibBIT_PolyLibBIT
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     espam_utils_polylib_polylibBIT_PolyLibBIT
 * Method:    Constraints2Polyhedron
 * Signature: (Lespam/utils/symbolic/matrix/JMatrix;)Lespam/utils/polylib/Polyhedron;
 */
JNIEXPORT jobject JNICALL Java_espam_utils_polylib_polylibBIT_PolyLibBIT_Constraints2Polyhedron
  (JNIEnv *, jclass, jobject);

/*
 * Class:     espam_utils_polylib_polylibBIT_PolyLibBIT
 * Method:    ConstraintsSimplify
 * Signature: (Lespam/utils/symbolic/matrix/JMatrix;Lespam/utils/symbolic/matrix/JMatrix;)Lespam/utils/symbolic/matrix/JMatrix;
 */
JNIEXPORT jobject JNICALL Java_espam_utils_polylib_polylibBIT_PolyLibBIT_ConstraintsSimplify
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     espam_utils_polylib_polylibBIT_PolyLibBIT
 * Method:    DomainConvex
 * Signature: (Lespam/utils/polylib/Polyhedron;)Lespam/utils/polylib/Polyhedron;
 */
JNIEXPORT jobject JNICALL Java_espam_utils_polylib_polylibBIT_PolyLibBIT_DomainConvex
  (JNIEnv *, jclass, jobject);

/*
 * Class:     espam_utils_polylib_polylibBIT_PolyLibBIT
 * Method:    DomainCopy
 * Signature: (Lespam/utils/polylib/Polyhedron;)Lespam/utils/polylib/Polyhedron;
 */
JNIEXPORT jobject JNICALL Java_espam_utils_polylib_polylibBIT_PolyLibBIT_DomainCopy
  (JNIEnv *, jclass, jobject);

/*
 * Class:     espam_utils_polylib_polylibBIT_PolyLibBIT
 * Method:    DomainDifference
 * Signature: (Lespam/utils/polylib/Polyhedron;Lespam/utils/polylib/Polyhedron;)Lespam/utils/polylib/Polyhedron;
 */
JNIEXPORT jobject JNICALL Java_espam_utils_polylib_polylibBIT_PolyLibBIT_DomainDifference
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     espam_utils_polylib_polylibBIT_PolyLibBIT
 * Method:    DomainImage
 * Signature: (Lespam/utils/polylib/Polyhedron;Lespam/utils/symbolic/matrix/JMatrix;)Lespam/utils/polylib/Polyhedron;
 */
JNIEXPORT jobject JNICALL Java_espam_utils_polylib_polylibBIT_PolyLibBIT_DomainImage
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     espam_utils_polylib_polylibBIT_PolyLibBIT
 * Method:    DomainIntersection
 * Signature: (Lespam/utils/polylib/Polyhedron;Lespam/utils/polylib/Polyhedron;)Lespam/utils/polylib/Polyhedron;
 */
JNIEXPORT jobject JNICALL Java_espam_utils_polylib_polylibBIT_PolyLibBIT_DomainIntersection
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     espam_utils_polylib_polylibBIT_PolyLibBIT
 * Method:    DomainPreimage
 * Signature: (Lespam/utils/polylib/Polyhedron;Lespam/utils/symbolic/matrix/JMatrix;)Lespam/utils/polylib/Polyhedron;
 */
JNIEXPORT jobject JNICALL Java_espam_utils_polylib_polylibBIT_PolyLibBIT_DomainPreimage
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     espam_utils_polylib_polylibBIT_PolyLibBIT
 * Method:    DomainSimplify
 * Signature: (Lespam/utils/polylib/Polyhedron;Lespam/utils/polylib/Polyhedron;)Lespam/utils/polylib/Polyhedron;
 */
JNIEXPORT jobject JNICALL Java_espam_utils_polylib_polylibBIT_PolyLibBIT_DomainSimplify
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     espam_utils_polylib_polylibBIT_PolyLibBIT
 * Method:    DomainUnion
 * Signature: (Lespam/utils/polylib/Polyhedron;Lespam/utils/polylib/Polyhedron;)Lespam/utils/polylib/Polyhedron;
 */
JNIEXPORT jobject JNICALL Java_espam_utils_polylib_polylibBIT_PolyLibBIT_DomainUnion
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     espam_utils_polylib_polylibBIT_PolyLibBIT
 * Method:    EmptyPolyhedron
 * Signature: (I)Lespam/utils/polylib/Polyhedron;
 */
JNIEXPORT jobject JNICALL Java_espam_utils_polylib_polylibBIT_PolyLibBIT_EmptyPolyhedron
  (JNIEnv *, jclass, jint);

/*
 * Class:     espam_utils_polylib_polylibBIT_PolyLibBIT
 * Method:    isTrustedSolution
 * Signature: ()Z
 */
JNIEXPORT jboolean JNICALL Java_espam_utils_polylib_polylibBIT_PolyLibBIT_isTrustedSolution
  (JNIEnv *, jclass);

/*
 * Class:     espam_utils_polylib_polylibBIT_PolyLibBIT
 * Method:    JMatrix2JMatrix
 * Signature: (Lespam/utils/symbolic/matrix/JMatrix;)Lespam/utils/symbolic/matrix/JMatrix;
 */
JNIEXPORT jobject JNICALL Java_espam_utils_polylib_polylibBIT_PolyLibBIT_JMatrix2JMatrix
  (JNIEnv *, jclass, jobject);

/*
 * Class:     espam_utils_polylib_polylibBIT_PolyLibBIT
 * Method:    LexSmallerEnumerate
 * Signature: (Lespam/utils/symbolic/matrix/SignedMatrix;Lespam/utils/symbolic/matrix/SignedMatrix;ILespam/utils/symbolic/matrix/SignedMatrix;)Lespam/utils/polylib/Enumeration;
 */
JNIEXPORT jobject JNICALL Java_espam_utils_polylib_polylibBIT_PolyLibBIT_LexSmallerEnumerate
  (JNIEnv *, jclass, jobject, jobject, jint, jobject);

/*
 * Class:     espam_utils_polylib_polylibBIT_PolyLibBIT
 * Method:    Polyhedron2Constraints
 * Signature: (Lespam/utils/polylib/Polyhedron;)Lespam/utils/symbolic/matrix/JMatrix;
 */
JNIEXPORT jobject JNICALL Java_espam_utils_polylib_polylibBIT_PolyLibBIT_Polyhedron2Constraints
  (JNIEnv *, jclass, jobject);

/*
 * Class:     espam_utils_polylib_polylibBIT_PolyLibBIT
 * Method:    Polyhedron2ParamDomain
 * Signature: (Lespam/utils/polylib/Polyhedron;Lespam/utils/polylib/Polyhedron;)Lespam/utils/polylib/ParamPolyhedron;
 */
JNIEXPORT jobject JNICALL Java_espam_utils_polylib_polylibBIT_PolyLibBIT_Polyhedron2ParamDomain
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     espam_utils_polylib_polylibBIT_PolyLibBIT
 * Method:    Polyhedron2ParamVertices
 * Signature: (Lespam/utils/polylib/Polyhedron;Lespam/utils/polylib/Polyhedron;)Lespam/utils/polylib/ParamPolyhedron;
 */
JNIEXPORT jobject JNICALL Java_espam_utils_polylib_polylibBIT_PolyLibBIT_Polyhedron2ParamVertices
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     espam_utils_polylib_polylibBIT_PolyLibBIT
 * Method:    Polyhedron2Polyhedron
 * Signature: (Lespam/utils/polylib/Polyhedron;)Lespam/utils/polylib/Polyhedron;
 */
JNIEXPORT jobject JNICALL Java_espam_utils_polylib_polylibBIT_PolyLibBIT_Polyhedron2Polyhedron
  (JNIEnv *, jclass, jobject);

/*
 * Class:     espam_utils_polylib_polylibBIT_PolyLibBIT
 * Method:    PolyhedronEnumerate
 * Signature: (Lespam/utils/polylib/Polyhedron;Lespam/utils/polylib/Polyhedron;)Lespam/utils/polylib/Enumeration;
 */
JNIEXPORT jobject JNICALL Java_espam_utils_polylib_polylibBIT_PolyLibBIT_PolyhedronEnumerate
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     espam_utils_polylib_polylibBIT_PolyLibBIT
 * Method:    PolyhedronScan
 * Signature: (Lespam/utils/polylib/Polyhedron;Lespam/utils/polylib/Polyhedron;)Lespam/utils/polylib/Polyhedron;
 */
JNIEXPORT jobject JNICALL Java_espam_utils_polylib_polylibBIT_PolyLibBIT_PolyhedronScan
  (JNIEnv *, jclass, jobject, jobject);

/*
 * Class:     espam_utils_polylib_polylibBIT_PolyLibBIT
 * Method:    Rays2Polyhedron
 * Signature: (Lespam/utils/symbolic/matrix/JMatrix;)Lespam/utils/polylib/Polyhedron;
 */
JNIEXPORT jobject JNICALL Java_espam_utils_polylib_polylibBIT_PolyLibBIT_Rays2Polyhedron
  (JNIEnv *, jclass, jobject);

/*
 * Class:     espam_utils_polylib_polylibBIT_PolyLibBIT
 * Method:    UniversePolyhedron
 * Signature: (I)Lespam/utils/polylib/Polyhedron;
 */
JNIEXPORT jobject JNICALL Java_espam_utils_polylib_polylibBIT_PolyLibBIT_UniversePolyhedron
  (JNIEnv *, jclass, jint);

#ifdef __cplusplus
}
#endif
#endif
