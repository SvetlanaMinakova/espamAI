dnl	This file is an input file used by the GNU "autoconf" program to
dnl	generate the file "configure", which is run to configure the
dnl	Makefile in this directory.

# Version: $Id: configure.in,v 1.1 2007/12/07 22:06:42 stefanov Exp $
#


dnl Autoconfigure for DIVA
AC_INIT(./config/cpinvoke.in)

if test $prefix = "NONE"; then
	prefix=`dirname $0 | xargs readlink -f `
	AC_MSG_WARN([No prefix is given, will assume that ESPAM will run from directory "$prefix". Use "--prefix=path" to change this path])
else
	AC_MSG_WARN([ESPAM will run from directory '$prefix'])
fi

if test ! -d  $prefix; then
	AC_MSG_WARN([Prefix path doesn't exist. Please check path supplied with  "--prefix=path" option])
fi

dnl Check the JAVA STUFF
AC_CHECKING(" -------- JAVA Stuff --------- ")
#--------------------------------------------------------------------
#	See if there was a command-line option for where Java is;  if
#	not, check to see if the JAVA_HOME environment variable is set;
#       if it is not, look for javac on the path.
#--------------------------------------------------------------------
AC_PATH_PROG(JAVAC, javac)
AC_ARG_WITH(java, [  --with-java=DIR         Location of JDK installation],
    JAVA_HOME=$withval, JAVA_HOME=`readlink -f $JAVAC | sed "s:/bin/javac::"`)

echo $JAVA_HOME
if test -d "$JAVA_HOME"; then
    AC_MSG_RESULT([Using Java installation at '$JAVA_HOME'])
else
    AC_MSG_ERROR([Java installation not found, please specify --with-java])
fi


dnl Check for other stuff
AC_CHECKING(" -------- OTHER Stuff --------- ")
#--------------------------------------------------------------------
# SystemC stuff
#--------------------------------------------------------------------
AC_ARG_WITH(systemc, [  --with-systemc=DIR      Location of SystemC installation],
    SYSTEMC_HOME=$withval, SYSTEMC_HOME="${HOME}/systemc-2.2.0")

SYSTEMC_HOME_STATUS="OK"
if test ! -r "${SYSTEMC_HOME}/include/systemc.h"; then
    SYSTEMC_HOME_STATUS="systemc.h not found"
    AC_MSG_WARN(SystemC header file not found.)
fi

#--------------------------------------------------------------------
# DARTS stuff
#--------------------------------------------------------------------
AC_MSG_CHECKING([for DARTS])
AC_ARG_WITH(darts, [  --with-darts=DIR      Location of darts installation],
    DARTS_HOME=$withval, DARTS_HOME="${HOME}/darts")

echo $DARTS_HOME
DARTS_HOME_STATUS="OK"
if test ! -r "${DARTS_HOME}/darts/ActorModel.py"; then
    DARTS_HOME_STATUS="DARTS not found"
    AC_MSG_WARN(DARTS not found.)
else
    AC_MSG_RESULT([Using darts installation at '$DARTS_HOME'])
fi

AC_CHECKING(" -------- PYTHON --------- ")
#--------------------------------------------------------------------
# Python stuff 
#--------------------------------------------------------------------
AC_MSG_CHECKING([for PYTHONCALL])
AC_ARG_WITH(python, [  --with-python=DIR         Location of python installation],
    PYTHONCALL=$withval, PYTHONCALL=`(which python)`)
if test -e "$PYTHONCALL"; then
    AC_MSG_RESULT([Using python installation at '$PYTHONCALL'])
else
    AC_MSG_ERROR([Python installation not found, please specify --with-python])
fi

#--------------------------------------------------------------------
# Application absolute path
#--------------------------------------------------------------------
APPPATH=`(pwd)`

#--------------------------------------------------------------------
# Output files directory
#--------------------------------------------------------------------
AC_MSG_CHECKING([for OUTPUT])
AC_ARG_WITH(output, [  --with-output=DIR         ],
    OUTPUT=$withval, OUTPUT=$prefix)
if test ! -d  $OUTPUT; then
        OUTPUT=$OUTPUT/output_models
fi

#--------------------------------------------------------------------
#	Figure out which separator to use for CLASSPATH
#	So much for write once, run everywhere.
#--------------------------------------------------------------------
AC_MSG_CHECKING([for CLASSPATH separator])
case "`uname -s`" in
    CYGWIN_NT-*) CLASSPATHSEPARATOR=";";
		OPT_QUOTE="\"";;
    CYGWIN32/NT) CLASSPATHSEPARATOR=";";
		OPT_QUOTE="\"";;
    *) CLASSPATHSEPARATOR=":";
		OPT_QUOTE="";;
esac
AC_MSG_RESULT($CLASSPATHSEPARATOR)

dnl Checks for libraries.
dnl We use shared libraries when possible. In that case we
dnl use the shared_lib function, otherwise the library
dnl function from fucntions_default.mk. In case of the
dnl shared libraries we fill in specifics for the platforms

case "`uname -s`" in
    *Linux*)
        LDPATH="LD_LIBRARY_PATH";;
    *SunOS*)
        LDPATH="LD_LIBRARY_PATH";;
    *)
        LDPATH="PATH";;
esac

dnl fix to get configure work smoother on CYGWIN systems
case "`uname -s`" in
	# On a CYGWIN system, the path for the CLASSPATH and PATH
	# needs to be different to work correctly. The classpath
	# needs to start from the windows root (e.g. "c:/"), while the
	# path used to load an DLL should have as root the rootof
	# cyginw (e.g. /home).
    CYGWIN_NT-*)
	CYGWINPREFIX=`echo $prefix | sed "s/.cygwin/g/" | sed "s/://" | sed "s/.g//"`
        AC_MSG_RESULT([Cygwin adjusted prefix for loading DLL:'$CYGWINPREFIX'])
	LIBPATH=$CYGWINPREFIX/lib;; #On Win/NT statically linked
    *) LIBPATH=$prefix/lib;; #On LINUX/UNIX dynamically linked
esac

AC_MSG_CHECKING([for library path])
AC_MSG_RESULT(['$LIBPATH'])


AC_MSG_NOTICE([Classpath separator  = '$CLASSPATHSEPARATOR'])
AC_MSG_NOTICE([Java Home            = '$JAVA_HOME'])
AC_MSG_NOTICE([Library Path         = '$LDPATH'])
AC_MSG_NOTICE([Library Content      = '$LIBPATH'])
AC_MSG_NOTICE([SystemC Home         = '$SYSTEMC_HOME' ($SYSTEMC_HOME_STATUS)])
AC_MSG_NOTICE([darts Home           = '$DARTS_HOME' ($DARTS_HOME_STATUS)])
AC_MSG_NOTICE([python path          = '$PYTHONCALL'])
AC_MSG_NOTICE([output files path    = '$OUTPUT'])

#---- Keep these substitutions alphabetical, with a description ----#

# Separator in CLASSPATH,  For Unix, this should be :, for Cygwin use ;
AC_SUBST(CLASSPATHSEPARATOR)

# Location of the JDK
AC_SUBST(JAVA_HOME)

AC_SUBST(LIBPATH)

# From where to get the library files
AC_SUBST(LDPATH)

# Location of SystemC installation
AC_SUBST(SYSTEMC_HOME)

# Location of DARTS installation
AC_SUBST(DARTS_HOME)

# Location of PYTHON installation
AC_SUBST(PYTHONCALL)

# Output directory
AC_SUBST(OUTPUT)

# Application sources absolute path
AC_SUBST(APPPATH)

# Files we substitute in
#AC_OUTPUT(vars.mk)

# Files we substitute in
AC_OUTPUT(./config/cpinvoke ./config/vars.mk ./src/espam/main/Config.java ./src/espam/interfaces/python/espam_cnn_interface.py)
chmod -R 755 ./bin
cp ./config/cpinvoke ./bin
cp ./config/vars.mk ./src
chmod 755 ./bin/cpinvoke

# Select the libpandapolylib.so version that matches the system
PANDALIB="libpandapolylib.so.`getconf LONG_BIT`"
if test -x lib/$PANDALIB; then
  rm -f lib/libpandapolylib.so
  ln -s $PANDALIB lib/libpandapolylib.so
else
  AC_MSG_ERROR([libpandapolylib.so was not precompiled for your platform; please compile it yourself])
fi

cd ./bin
rm -rf espam
ln -s cpinvoke espam
