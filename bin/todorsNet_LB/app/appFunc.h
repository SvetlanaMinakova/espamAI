// File automatically generated by ESPAM

#ifndef appFunc_H
#define appFunc_H
#include <stdlib.h>
#include <iostream>
#include <string>
#include <vector>
#include "types.h"

class appFunc {
public:
    appFunc();
    virtual ~appFunc();

  // Execution function primitive
    static void execute (std::string function);
    static void execute (std::string function,int* input, int* weights, int* output, std::map<std::string,int>* int_params_ptr );

  /**
  Data shift function (for shifting overlapping data in I/O arrays)
  @param array : I/O overlapping array
  @param dim   : I/O overlapping array dimensionality
  */
    // line copy function, type: int
    static void cpy_2D_data_line(const int &data_w, int *src,int *dst, const int &line_id);
    // line copy function, type: float
    static void cpy_2D_data_line(const int &data_w, float *src,float *dst, const int &line_id);

    // matrix shift functions, type: int
    static void shift_2D(const int &h, const int &w, int *x, const int &stride);
    static void shift_3D(const int &d, const int &h, const int &w, int *x, const int &stride);
    // matrix shift functions, type: float
    static void shift_2D(const int &h, const int &w, float *x, const int &stride);
    static void shift_3D(const int &d, const int &h, const int &w, float *x, const int &stride);

    // matrix print functions, type: int
    static void print_2D (const int &h, const int &w, int *x);
    static void print_3D (const int &d, const int &h, const int &w, int *x);
    // matrix print functions, type: float
    static void print_2D (const int &h, const int &w, float *x);
    static void print_3D (const int &d, const int &h, const int &w, float *x);
    static fifo_buf* get_buf_by_src (std::string name, std::vector<fifo_buf>& fifos);
    static fifo_buf* get_buf_by_dst (std::string name, std::vector<fifo_buf>& fifos);
};
#endif // appFunc_H
