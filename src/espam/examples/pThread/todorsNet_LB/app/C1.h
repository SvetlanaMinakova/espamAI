// File automatically generated by ESPAM

#ifndef C1_H
#define C1_H
#include "csdfNode.h"
#include <map>

class C1 : public csdfNode{
public:
    C1();
    virtual ~C1();

    void main(void *threadarg) override;
    // specific const parameters definition
    std::map<std::string,int> int_params;
  const int neurons = 4;

  //FIFO sizes
    int IP0_fifo_size;
    int OP1_fifo_size;

  const int input_dims = 2;
  //input array definition
    const int input_dim_0 = 17;
    const int input_dim_1 = 32;
    int input[17][32] = {{0}};

  const int output_dims = 3;
  //output array definition
    const int output_dim_0 = 4;
    const int output_dim_1 = 1;
    const int output_dim_2 = 16;
    int output[4][1][16] = {{{0}}};

  //weights array definition
    const int weights_dim_0 = 4;
    const int weights_dim_1 = 17;
    const int weights_dim_2 = 17;
    int weights[4][17][17] = {{{0}}};

//const parameters
  const int k_h = 17;
  const int k_w = 17;
  const int stride = 1;
  //specific node parameters and functions
};
#endif // C1_H
